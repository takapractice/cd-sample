version: 2
branches:
  ignore:
    - /wip/*

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          DATABASE_HOST: 127.0.0.1
          DATABASE_NAME: backbeard-db
      - image: postgres:9.5
        environment:
          POSTGRES_USER: backbeard-user
          POSTGRES_PASSWORD: 
          POSTGRES_DB: backbeard-db
          POSTGRES_INITDB_ARGS: "-E UTF8 --no-locale"

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      - run:
          name: Archive source code
          command: |
            pwd
            ls -ltr ../
            #cd ../ && tar --exclude .git --acls -cfz backbeard.tar.gz repo
            cd ../
            tar --exclude .git -cvzf backbeard.tar.gz ./repo

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.sbt" }}
          - v1-dependencies-

      - run: sbt test dist

      - run:
          name: Install awscli
          command: |
            #sudo apt install python-pip python-dev
            sudo apt update
            sudo apt upgrade
            sudo apt install python-pip
            sudo pip install --upgrade pip
            sudo apt install python-dev
            sudo pip install awscli

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}
      - run:
          name: Wait for Postgres DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

      - run:
          name: Install jFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: Push Artifactory1
          command: |
            ./jfrog config add --artifactory-url https://taca17.jfrog.io/artifactory/ --user rockhop17g@gmail.com --apikey AKCp8ihLMCzJ3XhHSdPeFR7bRVA7YxKG6aQHCAp8bCJ4RP6HcPifzd7ro5CfUSnrV6KpJS2xR --interactive=false
      - run:
          name: Push Artifactory2
          command: |
            ./jfrog rt u "../*.gz" libs-released-local/
      #- run:
      #    name: Copy File for S3
      #    command: |
      #      aws s3 cp ~/backbeard.tar.gz "s3://backbeard/${CIRCLE_BRANCH}/backbeard.tar.gz"
      #      aws s3 cp target/universal/backbeard-staging.zip "s3://backbeard/${CIRCLE_BRANCH}/backbeard-staging.zip"

  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: Install ansible
          command: |
            sudo pip install ansible
      - run:
          name: deploy master
          command: cd ansible/ && ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i hosts deploy.yml --extra-vars "aws_access_key=${AWS_ACCESS_KEY_ID} aws_secret_key=${AWS_SECRET_ACCESS_KEY}"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
